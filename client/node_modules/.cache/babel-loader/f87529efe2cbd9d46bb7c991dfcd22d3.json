{"ast":null,"code":"var _jsxFileName = \"/Users/Jamie/Desktop/pre-upload-sessions/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pic, setPic] = useState();\n  const [sessionData, setSessionData] = useState(\"no session data\");\n  const [sessionSourceId, setSessionSourceId] = useState(\"no session\"); //Used to check status.\n\n  const [sessionStatus, setSessionStatus] = useState(\"No Status\");\n  const [sessionPresignedUrl, setSessionPresignedUrl] = useState(\"No session URL\"); //Long amazon url\n\n  const [heldFormData, setHeldFormData] = useState(\"\");\n  useEffect(() => {}, [sessionData, heldFormData]); //IMGIX EXAMPLES: STARTING SESSION\n\n  const imgixHandleSubmitForSessionStarting = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"pic\", pic);\n    const test = await axios.post(\"http://localhost:5001/startImgixSession\", formData).then(console.log(\"starting imgix session\")).catch(error => console.log(error.message));\n    setSessionSourceId(test.data.allData.data.attributes.id); //Stores session Source id\n\n    setSessionStatus(test.data.allData.data.attributes.status);\n    setSessionPresignedUrl(test.data.allData.data.attributes.url);\n    setHeldFormData(test.data.theBufferReturned.data);\n  };\n\n  const imgixHandleChangeForSessionStarting = e => {\n    setPic(e.target.files[0]);\n  }; //IMGIX EXAMPLE: PUT REQUEST WITH PRESIGNED SESSION URL\n\n\n  const sendFormDataPostRequest = async e => {\n    e.preventDefault();\n    const formDataPostRequest = new FormData();\n    formDataPostRequest.append(\"pic\", pic);\n    formDataPostRequest.append(\"awsURL\", sessionPresignedUrl); //Starting session\n\n    const test = await axios.post(\"http://localhost:5001/postSession\", formDataPostRequest).then(console.log(\"\")).catch(error => console.log(error.message));\n  }; //IMGIX EXAMPLE: CHECK SESSION STATUS\n\n\n  const imgixHandleCheckStatus = async e => {\n    e.preventDefault();\n    const value = {\n      grabbedSessionSourceID: sessionSourceId\n    }; //check session\n\n    const sessionStatusForAxios = await axios.post(\"http://localhost:5001/checkImgixSessionStatus\", value).then(console.log(\"Check imgix session\")).catch(error => console.log(error.message));\n    setSessionStatus(\"Checked: \" + sessionStatusForAxios.data.data.attributes.status);\n  }; //IMGIX EXAMPLE: CLOSE SESSION\n\n\n  const imgixHandleCloseSession = async e => {\n    e.preventDefault();\n    const valueData = {\n      grabbedSessionSourceID: sessionSourceId\n    }; //close session\n\n    const sessionStatusForAxios = await axios.post(\"http://localhost:5001/checkImgixCloseSession\", valueData).then(console.log(\"Client - CLOSE imgix session\")).catch(error => console.log(error.message));\n    setSessionStatus(\"Checked: \" + sessionStatusForAxios.data.data.attributes.status);\n  }; //See formData\n\n\n  const seeFormData = () => {\n    console.log(JSON.stringify(heldFormData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: imgixHandleSubmitForSessionStarting,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: imgixHandleChangeForSessionStarting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Starting a session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendFormDataPostRequest,\n        children: \"Sending formData to Post Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: imgixHandleCheckStatus,\n      children: \"Check session status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: imgixHandleCloseSession,\n      children: \"Close Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: seeFormData,\n      children: \"See form data in Console log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"The sessionSourceId is: \", sessionSourceId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"The sessionStatus is: \", sessionStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"The sessionPresignedUrl is: \", sessionPresignedUrl]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XXN9/1hxv7dykDnitQgAoMelcuM=\");\n\n_c = App;\nexport default App;\n/*\nSteps to follow:\n1) Start session\n2) upload with Presigned URL\n3) Close session\n4) Check status.\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","useState","App","pic","setPic","sessionData","setSessionData","sessionSourceId","setSessionSourceId","sessionStatus","setSessionStatus","sessionPresignedUrl","setSessionPresignedUrl","heldFormData","setHeldFormData","imgixHandleSubmitForSessionStarting","e","preventDefault","formData","FormData","append","test","post","then","console","log","catch","error","message","data","allData","attributes","id","status","url","theBufferReturned","imgixHandleChangeForSessionStarting","target","files","sendFormDataPostRequest","formDataPostRequest","imgixHandleCheckStatus","value","grabbedSessionSourceID","sessionStatusForAxios","imgixHandleCloseSession","valueData","seeFormData","JSON","stringify"],"sources":["/Users/Jamie/Desktop/pre-upload-sessions/client/src/App.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [pic, setPic] = useState();\n  const [sessionData, setSessionData] = useState(\"no session data\");\n  const [sessionSourceId, setSessionSourceId] = useState(\"no session\"); //Used to check status.\n  const [sessionStatus, setSessionStatus] = useState(\"No Status\");\n  const [sessionPresignedUrl, setSessionPresignedUrl] =\n    useState(\"No session URL\"); //Long amazon url\n  const [heldFormData, setHeldFormData] = useState(\"\");\n  useEffect(() => {}, [sessionData, heldFormData]);\n\n  //IMGIX EXAMPLES: STARTING SESSION\n  const imgixHandleSubmitForSessionStarting = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"pic\", pic);\n\n    const test = await axios\n      .post(\"http://localhost:5001/startImgixSession\", formData)\n      .then(console.log(\"starting imgix session\"))\n      .catch((error) => console.log(error.message));\n\n    setSessionSourceId(test.data.allData.data.attributes.id); //Stores session Source id\n    setSessionStatus(test.data.allData.data.attributes.status);\n    setSessionPresignedUrl(test.data.allData.data.attributes.url);\n    setHeldFormData(test.data.theBufferReturned.data);\n  };\n  const imgixHandleChangeForSessionStarting = (e) => {\n    setPic(e.target.files[0]);\n  };\n\n  //IMGIX EXAMPLE: PUT REQUEST WITH PRESIGNED SESSION URL\n  const sendFormDataPostRequest = async (e) => {\n    e.preventDefault();\n    const formDataPostRequest = new FormData();\n    formDataPostRequest.append(\"pic\", pic);\n    formDataPostRequest.append(\"awsURL\", sessionPresignedUrl);\n\n    //Starting session\n    const test = await axios\n      .post(\"http://localhost:5001/postSession\", formDataPostRequest)\n      .then(console.log(\"\"))\n      .catch((error) => console.log(error.message));\n  };\n\n  //IMGIX EXAMPLE: CHECK SESSION STATUS\n  const imgixHandleCheckStatus = async (e) => {\n    e.preventDefault();\n    const value = { grabbedSessionSourceID: sessionSourceId };\n\n    //check session\n    const sessionStatusForAxios = await axios\n      .post(\"http://localhost:5001/checkImgixSessionStatus\", value)\n      .then(console.log(\"Check imgix session\"))\n      .catch((error) => console.log(error.message));\n\n    setSessionStatus(\n      \"Checked: \" + sessionStatusForAxios.data.data.attributes.status\n    );\n  };\n\n  //IMGIX EXAMPLE: CLOSE SESSION\n  const imgixHandleCloseSession = async (e) => {\n    e.preventDefault();\n    const valueData = { grabbedSessionSourceID: sessionSourceId };\n\n    //close session\n    const sessionStatusForAxios = await axios\n      .post(\"http://localhost:5001/checkImgixCloseSession\", valueData)\n      .then(console.log(\"Client - CLOSE imgix session\"))\n      .catch((error) => console.log(error.message));\n\n    setSessionStatus(\n      \"Checked: \" + sessionStatusForAxios.data.data.attributes.status\n    );\n  };\n\n  //See formData\n  const seeFormData = () => {\n    console.log(JSON.stringify(heldFormData));\n  };\n\n  return (\n    <div className='app'>\n      <form className='form' onSubmit={imgixHandleSubmitForSessionStarting}>\n        <input type='file' onChange={imgixHandleChangeForSessionStarting} />\n        <br />\n        <button>Starting a session</button>\n        <br />\n        <button onClick={sendFormDataPostRequest}>\n          Sending formData to Post Request\n        </button>\n      </form>\n      <button onClick={imgixHandleCheckStatus}>Check session status</button>\n      <br />\n      <button onClick={imgixHandleCloseSession}>Close Session</button>\n      <br />\n      <button onClick={seeFormData}>See form data in Console log</button>\n      <br />\n\n      <h3>The sessionSourceId is: {sessionSourceId}</h3>\n      <h3>The sessionStatus is: {sessionStatus}</h3>\n      <h3>The sessionPresignedUrl is: {sessionPresignedUrl}</h3>\n      {/* <h3>minetype is: {storedMimetype}</h3> */}\n    </div>\n  );\n}\n\nexport default App;\n\n/*\nSteps to follow:\n1) Start session\n2) upload with Presigned URL\n3) Close session\n4) Check status.\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}