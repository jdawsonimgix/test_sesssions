{"ast":null,"code":"var _jsxFileName = \"/Users/Jamie/Desktop/pre-upload-sessions/client/src/App.js\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [pic, setPic] = useState();\n  // const [allPics, setAllPics] = useState([]);\n  // useEffect(() => {\n  //   getAllPics();\n  // }, [allPics]);\n  // const getAllPics = async () => {\n  //   await axios\n  //     .get(\"http://localhost:5001/pictures\")\n  //     .then((res) => setAllPics(res.data))\n  //     .catch((error) => console.log(error.message));\n  // };\n  // const handleDelete = async (name) => {\n  //   await axios\n  //     .delete(\"http://localhost:5001/delete\", {\n  //       data: { name: name },\n  //     })\n  //     .then(getAllPics())\n  //     .catch((error) => console.log(error.message));\n  // };\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   const formData = new FormData(); //https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData\n  //   console.log(formData);\n  //   formData.append(\"pic\", pic);\n  //   await axios\n  //     .post(\"http://localhost:5001/addPicture\", formData)\n  //     .then(getAllPics())\n  //     .catch((error) => console.log(error.message));\n  // };\n  // const handleChange = (e) => {\n  //   setPic(e.target.files[0]);\n  // };\n  async function imgixCreateUploadSession(dataSent) {\n    console.log(\"Inside imgixCreateUploadSession\");\n    console.log(dataSent); //console.log(\"dataSent is: \" + JSON.stringify(dataSent.name)); //START HERE. THis works. Send dataSent over and try to do a session in the server\n\n    await axios.post(\"http://localhost:5001/imgixStartSession\", {\n      dataSent\n    }).catch(error => console.log(error.message));\n  }\n\n  const imgixOnChage = e => {\n    e.preventDefault();\n    let files;\n\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      imgixCreateUploadSession(files[0]);\n    };\n\n    reader.readAsDataURL(files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: imgixOnChage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","useState","App","imgixCreateUploadSession","dataSent","console","log","post","catch","error","message","imgixOnChage","e","preventDefault","files","dataTransfer","target","reader","FileReader","onload","readAsDataURL"],"sources":["/Users/Jamie/Desktop/pre-upload-sessions/client/src/App.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  // const [pic, setPic] = useState();\n  // const [allPics, setAllPics] = useState([]);\n  // useEffect(() => {\n  //   getAllPics();\n  // }, [allPics]);\n\n  // const getAllPics = async () => {\n  //   await axios\n  //     .get(\"http://localhost:5001/pictures\")\n  //     .then((res) => setAllPics(res.data))\n  //     .catch((error) => console.log(error.message));\n  // };\n\n  // const handleDelete = async (name) => {\n  //   await axios\n  //     .delete(\"http://localhost:5001/delete\", {\n  //       data: { name: name },\n  //     })\n  //     .then(getAllPics())\n  //     .catch((error) => console.log(error.message));\n  // };\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   const formData = new FormData(); //https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData\n  //   console.log(formData);\n  //   formData.append(\"pic\", pic);\n  //   await axios\n  //     .post(\"http://localhost:5001/addPicture\", formData)\n  //     .then(getAllPics())\n  //     .catch((error) => console.log(error.message));\n  // };\n  // const handleChange = (e) => {\n  //   setPic(e.target.files[0]);\n  // };\n\n  async function imgixCreateUploadSession(dataSent) {\n    console.log(\"Inside imgixCreateUploadSession\");\n    console.log(dataSent);\n    //console.log(\"dataSent is: \" + JSON.stringify(dataSent.name)); //START HERE. THis works. Send dataSent over and try to do a session in the server\n    await axios\n      .post(\"http://localhost:5001/imgixStartSession\", { dataSent })\n      .catch((error) => console.log(error.message));\n  }\n\n  const imgixOnChage = (e) => {\n    e.preventDefault();\n    let files;\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n    const reader = new FileReader();\n    reader.onload = () => {\n      imgixCreateUploadSession(files[0]);\n    };\n    reader.readAsDataURL(files[0]);\n  };\n\n  return (\n    <div className='app'>\n      <input type='file' onChange={imgixOnChage} />\n      {/* <form className='form' onSubmit={handleSubmit}>\n        <input type='file' onChange={handleChange} />\n        <button>upload</button>\n      </form> */}\n      {/* <div className='imgsContainer'>\n        {allPics &&\n          allPics.map((p) => (\n            <div className='imgItem' key={p.name}>\n              <img className='img' src={p.url} alt='' />\n              <button\n                className='imgButton'\n                onClick={() => handleDelete(p.name)}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EACb;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,eAAeC,wBAAf,CAAwCC,QAAxC,EAAkD;IAChDC,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACAD,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFgD,CAGhD;;IACA,MAAML,KAAK,CACRQ,IADG,CACE,yCADF,EAC6C;MAAEH;IAAF,CAD7C,EAEHI,KAFG,CAEIC,KAAD,IAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,OAAlB,CAFd,CAAN;EAGD;;EAED,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;IACA,IAAIC,KAAJ;;IACA,IAAIF,CAAC,CAACG,YAAN,EAAoB;MAClBD,KAAK,GAAGF,CAAC,CAACG,YAAF,CAAeD,KAAvB;IACD,CAFD,MAEO,IAAIF,CAAC,CAACI,MAAN,EAAc;MACnBF,KAAK,GAAGF,CAAC,CAACI,MAAF,CAASF,KAAjB;IACD;;IACD,MAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;;IACAD,MAAM,CAACE,MAAP,GAAgB,MAAM;MACpBhB,wBAAwB,CAACW,KAAK,CAAC,CAAD,CAAN,CAAxB;IACD,CAFD;;IAGAG,MAAM,CAACG,aAAP,CAAqBN,KAAK,CAAC,CAAD,CAA1B;EACD,CAbD;;EAeA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAEH;IAA7B;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;KApFQT,G;AAsFT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}